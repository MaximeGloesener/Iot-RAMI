stages:
  - lint
  - build
  - test
  - pages
  - build-images
  - deploy

# Substages

.install-bash: &install-bash
  - echo "Installing bash..."
  - apk update
  - apk upgrade
  - apk add bash
  - echo "Done."

.create-ssh-key: &create-ssh-key
  - echo "Creating SSH key..."
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
  - eval $(ssh-agent -s)
  - echo "$CI_SSH_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "Done."

.create-env-file: &create-env-file
  - echo "Creating .env.$CI_ENVIRONMENT_NAME file..."
  - echo "# App" > .env.$CI_ENVIRONMENT_NAME
  - echo "VITE_APP_BACK_URL=$CI_VITE_APP_BACK_URL" >> .env.$CI_ENVIRONMENT_NAME
  - echo "VITE_APP_TITLE=$CI_VITE_APP_TITLE" >> .env.$CI_ENVIRONMENT_NAME
  - echo "VITE_APP_ENV=$CI_ENVIRONMENT_NAME" >> .env.$CI_ENVIRONMENT_NAME
  - echo "VITE_APP_PORT_IN=$CI_VITE_APP_PORT_IN" >> .env.$CI_ENVIRONMENT_NAME
  - echo "VITE_APP_PORT_OUT=$CI_VITE_APP_PORT_OUT" >> .env.$CI_ENVIRONMENT_NAME
  - echo "# Gitlab" >> .env.$CI_ENVIRONMENT_NAME
  - echo "CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE" >> .env.$CI_ENVIRONMENT_NAME
  - echo "CI_COMMIT_SHA=$CI_COMMIT_SHA" >> .env.$CI_ENVIRONMENT_NAME
  - echo "CI_REGISTRY_USER=$CI_REGISTRY_USER" >> .env.$CI_ENVIRONMENT_NAME
  - echo "CI_REGISTRY_TOKEN=$CI_REGISTRY_TOKEN" >> .env.$CI_ENVIRONMENT_NAME
  - echo "CI_REGISTRY=$CI_REGISTRY" >> .env.$CI_ENVIRONMENT_NAME
  - echo "Done."

.docker-build-template: &docker-build-template
  environment:
    name: $CI_ENVIRONMENT_NAME
  image: docker:stable
  stage: build-images
  tags:
    - simu1
  needs:
    - test
  before_script:
    - *install-bash
    - *create-env-file
  script:
    - echo "Building docker image..."
    - ./.run.sh --env $CI_ENVIRONMENT_NAME --function docker_login
    - ./.run.sh --env $CI_ENVIRONMENT_NAME --function docker_build
    - ./.run.sh --env $CI_ENVIRONMENT_NAME --function docker_push
    - ./.run.sh --env $CI_ENVIRONMENT_NAME --function docker_tag_latest
    - ./.run.sh --env $CI_ENVIRONMENT_NAME --function docker_push_latest
    - echo "Done."

.deploy-template: &deploy-template
  image: docker:stable
  environment:
    name: $CI_ENVIRONMENT_NAME
  stage: deploy
  tags:
    - simu1
  before_script:
    - *create-env-file
    - *create-ssh-key
  script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME..."
    - scp -o StrictHostKeyChecking=no docker-compose.yml .env.$CI_ENVIRONMENT_NAME .run.sh $CI_SSH_USER@$CI_SSH_HOST:$CI_SSH_PATH
    - ssh -o StrictHostKeyChecking=no $CI_SSH_USER@$CI_SSH_HOST "./$CI_SSH_PATH/.run.sh -e $CI_ENVIRONMENT_NAME -p ./$CI_SSH_PATH -f docker_login && ./$CI_SSH_PATH/.run.sh -e $CI_ENVIRONMENT_NAME -p ./$CI_SSH_PATH -f docker_stop && ./$CI_SSH_PATH/.run.sh -e $CI_ENVIRONMENT_NAME -p ./$CI_SSH_PATH -f docker_start"
    - echo "Done."

# Jobs

lint:
  image: node:lts
  stage: lint
  script:
    - npm install --progress=false
    - npm run lint

build:
  image: node:lts
  stage: build
  needs:
    - lint
  artifacts:
    paths:
      - dist
    expire_in: 30 days
  before_script:
    - echo "Creating .env.build file..."
    - echo "# Nothing" > .env.build
    - echo "Done."
  script:
    - npm install --progress=false
    - VITE_APP_ENV=build npm run command build

test:
  image: alpine:latest
  stage: test
  needs:
    - build
  script:
    - echo "Launching tests..."
    - echo "Done."

pages:
  stage: pages
  needs:
    - test
  only:
    - main
  script:
    - mv dist/ public/
  artifacts:
    paths:
      - public
    expire_in: 4 week

docker-build:
  <<: *docker-build-template
  environment:
    name: staging
  only:
    - develop

docker-build-tag:
  <<: *docker-build-template
  environment:
    name: production
  only:
    - tags
  script:
    - ./.run.sh --env $CI_ENVIRONMENT_NAME --function docker_tag
    - ./.run.sh --env $CI_ENVIRONMENT_NAME --function docker_push_tag

deploy-production:
  <<: *deploy-template
  environment:
    name: production
    url: https://rami.ig.umons.ac.be
  only:
    - tags

deploy-staging:
  <<: *deploy-template
  environment:
    name: staging
    url: https://dev.rami.ig.umons.ac.be
  only:
    - develop
