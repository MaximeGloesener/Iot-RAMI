{
  "name": "umons-sensor-backend",
  "version": "1.5",
  "description": "Umons sensor API",
  "main": "src/server.ts",
  "scripts": {
    "hello": "echo $DB_USER",
    "command": "dotenv -e .env.$NODE_ENV -- npm run $1",
    "build": "tsup src/server.ts",
    "clean": "rm -rf dist",
    "dev": "TZ='UTC' nodemon src/server.ts",
    "docker:build": "docker build --no-cache -f Dockerfile --build-arg NODE_ENV=$NODE_ENV --build-arg PM2_PUBLIC_KEY=$PM2_PUBLIC_KEY --build-arg PM2_SECRET_KEY=$PM2_SECRET_KEY --build-arg DB_USER=$DB_USER --build-arg DB_PASSWORD=$DB_PASSWORD --build-arg DB_HOST=$DB_CONTAINER_NAME --build-arg DB_NAME=$DB_NAME --build-arg DB_DIALECT=$DB_DIALECT --build-arg NODE_PORT_IN=$NODE_PORT_IN -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .",
    "docker:build:tag": "docker build --no-cache -f Dockerfile --build-arg NODE_ENV=$NODE_ENV --build-arg PM2_PUBLIC_KEY=$PM2_PUBLIC_KEY --build-arg PM2_SECRET_KEY=$PM2_SECRET_KEY --build-arg DB_USER=$DB_USER --build-arg DB_PASSWORD=$DB_PASSWORD --build-arg DB_HOST=$DB_CONTAINER_NAME --build-arg DB_NAME=$DB_NAME --build-arg DB_DIALECT=$DB_DIALECT --build-arg NODE_PORT_IN=$NODE_PORT_IN -t $CI_REGISTRY_IMAGE:$CI_TAG_NAME .",
    "docker:tag": "docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_TAG_NAME",
    "docker:tag:latest": "docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest",
    "docker:login": "echo $CI_REGISTRY_TOKEN | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin",
    "docker:push": "docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA",
    "docker:push:tag": "docker push $CI_REGISTRY_IMAGE:$CI_TAG_NAME",
    "docker:push:latest": "docker push $CI_REGISTRY_IMAGE:latest",
    "docker:start": "TZ='UTC' docker compose -p api-$NODE_ENV -f docker-compose.yml --env-file .env.$NODE_ENV up -d",
    "docker:start:db": "TZ='UTC' docker compose -p api-$NODE_ENV -f docker-compose.yml --env-file .env.$NODE_ENV up node-db -d",
    "docker:stop": "TZ='UTC' docker compose -p api-$NODE_ENV -f docker-compose.yml --env-file .env.$NODE_ENV down",
    "docker:stop:db": "TZ='UTC' docker compose -p api-$NODE_ENV -f docker-compose.yml --env-file .env.$NODE_ENV down node-db",
    "docker:remove": "TZ='UTC' docker compose -p api-$NODE_ENV -f docker-compose.yml --env-file .env.$NODE_ENV down --rmi all || true",
    "docker:remove:database": "TZ='UTC' docker compose -p api-$NODE_ENV -f docker-compose.yml --env-file .env.$NODE_ENV down --rmi all $DB_CONTAINER_NAME || true",
    "docker:init-db": "docker exec $NODE_CONTAINER_NAME npm run init-db",
    "docker:migrate": "docker exec $NODE_CONTAINER_NAME npm run migrate",
    "docker:migrate:undo": "docker exec $NODE_CONTAINER_NAME npm run migrate:undo",
    "docker:seed": "docker exec $NODE_CONTAINER_NAME npm run seed",
    "docker:seed:undo:all": "docker exec $NODE_CONTAINER_NAME npm run seed:undo:all",
    "docker:exec": "docker exec -it $NODE_CONTAINER_NAME sh",
    "start": "TZ='UTC' pm2-runtime dist/server.js --name $CI_PROJECT_NAME-$NODE_ENV -i $PM2_INSTANCES",
    "format": "eslint src/**/*.ts --fix",
    "migrate": "sequelize-cli db:migrate --env $NODE_ENV",
    "migrate:undo": "sequelize-cli db:migrate:undo --env $NODE_ENV",
    "db-reset": "sequelize-cli db:migrate:undo:all --env $NODE_ENV",
    "init-db": "npm run db-reset && npm run migrate && npm run seed",
    "seed": "sequelize-cli db:seed:all --env $NODE_ENV",
    "seed:undo:all": "sequelize-cli db:seed:undo:all --env $NODE_ENV",
    "test": "jest --detectOpenHandles --verbose --runInBand",
    "test:watch": "jest --watch --detectOpenHandles",
    "test:coverage": "jest --coverage --detectOpenHandles --runInBand"
  },
  "repository": {
    "type": "git",
    "url": "git@gitlab.com:stage4a/umons-sensor-backend.git"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/bcrypt": "^5.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/mqtt": "^2.5.0",
    "@types/node": "^20.14.11",
    "@types/nodemailer": "^6.4.8",
    "@types/supertest": "^2.0.12",
    "@types/swagger-ui-express": "^4.1.3",
    "@typescript-eslint/eslint-plugin": "^5.60.1",
    "@typescript-eslint/parser": "^5.60.1",
    "eslint": "^8.43.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "^29.5.0",
    "nodemon": "^2.0.22",
    "pm2": "^5.3.0",
    "prettier": "^2.8.8",
    "sequelize-cli": "^6.6.1",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.1",
    "tsup": "^7.1.0",
    "typescript": "^5.1.6"
  },
  "dependencies": {
    "@swc/core": "^1.3.67",
    "bcrypt": "^5.1.0",
    "dotenv": "^16.3.1",
    "dotenv-cli": "^7.2.1",
    "express": "^4.18.2",
    "jsonwebtoken": "^9.0.0",
    "kafkajs": "^2.2.4",
    "mqtt": "^5.7.2",
    "nodemailer": "^6.9.14",
    "pg": "^8.11.1",
    "pg-hstore": "^2.3.4",
    "sequelize": "^6.32.1",
    "swagger-ui-express": "^4.6.3"
  }
}
