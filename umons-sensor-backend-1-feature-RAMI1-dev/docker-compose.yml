services:
  node-backend:
    container_name: ${NODE_CONTAINER_NAME}
    image: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    restart: always
    ports:
      - ${NODE_PORT_OUT}:${NODE_PORT_IN}
    environment:
      - NODE_ENV=${NODE_ENV}
      - NODE_PORT=${NODE_PORT_IN}
      - NODE_HOST=${NODE_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_CONTAINER_NAME}
      - DB_PORT=${DB_PORT_IN}
      - DB_DIALECT=${DB_DIALECT}
      - JWT_SECRET=${JWT_SECRET}
      - BCRYPT_SALT_ROUNDS=${BCRYPT_SALT_ROUNDS}
      - PM2_PUBLIC_KEY=${PM2_PUBLIC_KEY}
      - PM2_SECRET_KEY=${PM2_SECRET_KEY}
      - PM2_INSTANCES=${PM2_INSTANCES}
    networks:
      - default
    depends_on:
      - node-db
  node-db:
    container_name: ${DB_CONTAINER_NAME}
    image: timescale/timescaledb:latest-pg${DB_VERSION}
    restart: always
    ports:
      - ${DB_PORT_OUT}:${DB_PORT_IN}
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - db-data:/var/lib/postgresql/data
    # TIMESCALE DB INITIALIZATION
    entrypoint: ["/bin/bash", "-c", "echo \"shared_preload_libraries = 'timescaledb'\" >> /var/lib/postgresql/data/postgresql.conf && docker-entrypoint.sh postgres"]
    networks:
      - default

volumes:
  db-data:
    name: db-data-${NODE_ENV}

networks:
  default:
    name: network-${NODE_ENV}



