services:
  node-backend:
    container_name: ${NODE_CONTAINER_NAME}
    image: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    restart: always
    ports:
      - ${NODE_PORT_OUT}:${NODE_PORT_IN}
    environment:
      - NODE_ENV=${NODE_ENV}
      - NODE_PORT=${NODE_PORT_IN}
      - NODE_HOST=${NODE_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_CONTAINER_NAME}
      - DB_PORT=${DB_PORT_IN}
      - DB_DIALECT=${DB_DIALECT}
      - JWT_SECRET=${JWT_SECRET}
      - BCRYPT_SALT_ROUNDS=${BCRYPT_SALT_ROUNDS}
      - PM2_PUBLIC_KEY=${PM2_PUBLIC_KEY}
      - PM2_SECRET_KEY=${PM2_SECRET_KEY}
      - PM2_INSTANCES=${PM2_INSTANCES}
    networks:
      - default
    depends_on:
      - node-db
  node-db:
    container_name: ${DB_CONTAINER_NAME}
    image: timescale/timescaledb:latest-pg${DB_VERSION}
    restart: always
    ports:
      - ${DB_PORT_OUT}:${DB_PORT_IN}
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - db-data:/var/lib/postgresql/data
    # TIMESCALE DB INITIALIZATION
    entrypoint: ["/bin/bash", "-c", "echo \"shared_preload_libraries = 'timescaledb'\" >> /var/lib/postgresql/data/postgresql.conf && docker-entrypoint.sh postgres"]
    networks:
      - default

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - default  # Ajout au réseau par défaut

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - default  # Ajout au réseau par défaut
volumes:
  db-data:
    name: db-data-${NODE_ENV}

networks:
  default:
    name: network-${NODE_ENV}



